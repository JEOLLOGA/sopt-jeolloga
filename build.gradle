plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'sopt'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Login
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'io.projectreactor:reactor-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.json:json:20210307'
	implementation 'org.jsoup:jsoup:1.16.1'
	implementation 'org.springframework.boot:spring-boot-starter-batch'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// GeoCoding
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	archiveBaseName.set("jeolloga-${project.version}-${System.env.BRANCH_NAME ?: 'default'}")
}